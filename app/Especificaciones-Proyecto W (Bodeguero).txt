Direccion del servidor y puerto: 192.168.1.170:2193

Login:
	Ruta: 192.168.1.170:2193/sessions/create
	Método: POST
	Parámetros(x-www-form-urlencoded): {
		userID: demo@demo.com,
		password: demo
	}
	Retorna:
		Si hay un problema en la conexión a MySQL:
			{ status: "-1", message: "Can't not connect to mysql server", errID: "" }

		Si hay un problema con la consulta:
			{ status: "0", message: "Error on query trying to login", errID: "" }
		
		Si la contraseña o el usuario son inválidos:
			{ "error": "User or password doesn't match" }
		
		Si el usuario no está habilitado:
			{ "error": "User is disabled" }

		Si el usuario y password son correctos:
			{
			  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb2RVc3VhcmlvIjoxLCJub21icmUiOiJHVUFEQUxVUEUgSFVBTkNBIiwidGVsZWZvbm9Vc3VhcmlvIjoiKzUxOTk2ODU1Nzc0IiwiZW1haWxVc3VhcmlvIjoiZGVtb0BkZW1vLmNvbSIsImNvZFRpcERvY3VtZW50byI6IkROSSIsIm51bWVyb0RvY3VtZW50b1VzdWFyaW8iOiI3NTg5NjMxMiIsImlhdCI6MTQ4MzczNjgzNCwiZXhwIjoxNTE1Mjk0NDM0fQ.NSDiCkvciR2JO8a2wEIjTF1NRWJb0rRZPMIt6tReByo",
			  "user": {
			    "codUsuario": 1,
			    "nombre": "GUADALUPE HUANCA",
			    "telefonoUsuario": "+51996855774",
			    "emailUsuario": "demo@demo.com",
			    "codTipoDocumento": "DNI",
			    "numeroDocumentoUsuario": "75896312"
			  }
			}

Todas las rutas "protected" requieren token. 
Cuando el token no es correcto, el servidor da un mensaje en formato String.

Para las rutas "protected" se requiere que como mínimo se incluya la cabecera {Authorization: Bearer <Token>}:

	
	Ruta: "/api/protected/getNegocio"
	Método: GET
	Parámetros: (no requiere)
	Retorna:
		Si hay un problema en la conexión a MySQL:
			{ status: "-1", message: "Can't not connect to mysql server", errID: "" }

		Si hay un problema con la consulta:
			{ status: "0", message: "Error on query trying to get Negocio", errID: "" }

		Si el token es correcto:
			{
			  "status": "1",
			  "message": "OK",
			  "rows": [
			    {
			      "codNegocio": #,
			      "nombreNegocio": "",
			      "tipoNegocio": "",
			      "direccion": "",
			      "referencia": "",
			      "codUbigeo": "",
			      "telefonoFijo": "",
			      "coordenadas": "-12.045027, -77.000115"
			    }
			  ]
			}

		Si el usuario no tiene negocios registrados:
			{
			  "status": "1",
			  "message": "OK",
			  "rows": []
			}

Para pruebas:
	Ruta: "/api/random-quote"
	Método: GET
	Parámetros: (no requiere)
	Retorna: String

	============================================

	Ruta: "/api/getAllUsuario"
	Método: GET
	Parámetros: (no requiere)
	Retorna: 
		{
		  "status": "1",
		  "message": "OK",
		  "rows": [
		    {
		      "codUsuario": #,
		      "password": "",
		      "nombre": "",
		      "telefonoUsuario": "",
		      "emailUsuario": "",
		      "codTipoDocumento": "",
		      "numeroDocumentoUsuario": "",
		      "isEnabled": "1"
		    },
		    ...	
		  ]
		}

	============================================

	Ruta: "/api/createUsuario"
	Método: POST
	Consideraciones: 
		- Esta api aún está en su versión beta. Los parámetros no son finales.
		- Las respuesta del servidor son para fines de debug
		- No se está validando la contraseña, aún se necesita la complejidad de la contraseña.
		- No se está validando el formato correcto de correo electrónico ni confirmación de correo por parte del usuario
	Parámetros: {
		codUsuario: '', 
		nombre: 'frank', 
		password: '', 
		emailUsuario: 'car@asdasd', 
		telefonoUsuario: '12', 
		codTipoDocumento: 'DNI', 
		numeroDocumentoUsuario: '12', 
		ubigeo: ' 010104'
	}
	Retorna: 
		Si hay un problema en la conexión a MySQL:
			{ 
				status: "-1", 
				message: "Can't not connect to mysql server", 
				errID: "", 
				"error": {
					"code": "",
					"errno": #,
					"sqlState": "",
					"index": #
				}
			}
		Si hay un error en la consulta:
			{
				"status": "0",
				"message": "Error on query trying to create a user",
				"errID": "2017-01-10",
				"error": {
					"code": "",
					"errno": #,
					"sqlState": "",
					"index": #
				}
			}
		Si el email es duplicado:
			{
				"status": "0",
				"message": "Error on query trying to create a user",
				"errID": "2017-01-10",
				"errpr": {
					"code": "ER_DUP_ENTRY",
					"errno": 1062,
					"sqlState": "23000",
					"index": 0
				}
			}

		Si todo va bien:
			{
				"status": "1",
				"message": "OK",
				"rows_select_usuario_negocio": [
					{
						"codNegocio": 8,
						"codUsuario": 13,
						"nombreNegocio": "Negocio de frank",
						"tipoNegocio": null,
						"direccion": null,
						"referencia": null,
						"codUbigeo": "01010",
						"telefonoFijo": null,
						"coordenadas": null,
						"nombre": "frank",
						"telefonoUsuario": 12,
						"emailUsuario": car@asdasd",
						"codTipoDocumento": "DNI",
						"numeroDocumentoUsuario": "12"
					}
				],
				"input_data": {
					codUsuario: '', 
					nombre: 'frank', 
					password: '', 
					emailUsuario: 'car@asdasd', 
					telefonoUsuario: '12', 
					codTipoDocumento: 'DNI', 
					numeroDocumentoUsuario: '12', 
					ubigeo: ' 010104'
				}
			}

	============================================

	Ruta: "/api/protected/random-quote"
	Método: GET
	Parámetros: (no requiere)
	Retorna: String

